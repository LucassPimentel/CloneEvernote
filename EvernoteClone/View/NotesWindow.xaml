<Window x:Class="EvernoteClone.View.NotesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EvernoteClone.View"
        xmlns:uc="clr-namespace:EvernoteClone.View.UserControls"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        xmlns:vm="clr-namespace:EvernoteClone.ViewModel"
        Title="Notes" Height="450" Width="800">

    <Window.Resources>
        <vm:NotesViewModel x:Key="viewModel" />
    </Window.Resources>

    <DockPanel DataContext="{StaticResource viewModel}">
        <!--menu com ferramentas da aplicação, como salvar, abrir, fechar a aplicação-->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Arquivo">
                <MenuItem  Header="Novo bloco de notas" 
                           Command="{Binding NewNotebookCommand}"/>
                <Separator />
                <MenuItem Header="Sair" 
                          Command="{Binding CloseAppCommand}"/>
            </MenuItem>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="" x:Name="statusTextBlock"/>
            </StatusBarItem>
        </StatusBar>

        <ListView DockPanel.Dock="Left" 
                  Width="180"
                  Background="#3b3b3b"
                  SelectedValue="{Binding SelectedNotebook, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding Notebooks}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <uc:DisplayNotebook Notebook="{Binding}">
                            <uc:DisplayNotebook.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Renomear"
                                              Command="{Binding Source={StaticResource viewModel}, Path=StartRenameNotebookCommand}"/>

                                    <MenuItem Header="Excluir"
                                              Command="{Binding Source={StaticResource viewModel}, Path=DeleteNotebookCommand}"
                                              CommandParameter="{Binding}"/>

                                    <MenuItem Header="Nova nota"
                                            DataContext="{StaticResource viewModel}"
                                            CommandParameter="{Binding SelectedNotebook}"
                                            Command="{Binding Source={StaticResource viewModel}, Path=NewNoteCommand}"/>

                                </ContextMenu>
                            </uc:DisplayNotebook.ContextMenu>
                        </uc:DisplayNotebook>
                        <!--pacote microsoft.Xaml.Wpf.Behaviors foi instalado para poder chamar o método de uma viewModel via 
                        command através de um event (nesse caso o lostFocus) essa é a implementação:-->
                        <TextBox Text="{Binding Name, Mode=TwoWay}"
                                 Visibility="{Binding Source={StaticResource viewModel}, Path=IsVisible}" >

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction CommandParameter="{Binding}"
                                        Command="{Binding Source={StaticResource viewModel}, Path=StopRenameNotebookCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </TextBox>

                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <ListView DockPanel.Dock="Left"
                  Width="180"
                  ItemsSource="{Binding Notes}"
                  SelectedValue="{Binding SelectedNote, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <uc:DisplayNote Note="{Binding}">
                            <uc:DisplayNote.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Renomear"
                                              Command="{Binding Source={StaticResource viewModel}, Path=StartRenameNoteCommand}"/>

                                    <MenuItem Header="Excluir"
                                              Command="{Binding Source={StaticResource viewModel}, Path=DeleteNoteCommand}"
                                              CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </uc:DisplayNote.ContextMenu>
                        </uc:DisplayNote>

                        <TextBox Text="{Binding Title, Mode=TwoWay}"
                                 Visibility="{Binding Source={StaticResource viewModel}, Path=IsNoteVisible}" >

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction CommandParameter="{Binding}"
                                        Command="{Binding Source={StaticResource viewModel}, Path=StopRenameNoteCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </TextBox>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!--parte que fica acima do conteudo mas abaixo do menu de file, etc...-->
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar HorizontalAlignment="Left" Width="291">

                <ToggleButton x:Name="boldButton"
                        Content="B"
                        FontWeight="Bold"
                        Margin="5 0"
                        Click="boldButton_Click"/>

                <ToggleButton x:Name="italicButton"
                              Content="I"
                              FontStyle="Italic"
                              Margin="5 0"
                              Click="italicButton_Click"
                              />

                <ToggleButton x:Name="underlineButton" 
                              Click="underlineButton_Click"
                              Margin="5 0"
                              >
                    <TextBlock Text="U" TextDecorations="Underline"/>
                </ToggleButton>

                <ComboBox x:Name="fontFamilyComboBox"
                          Margin="5 0"
                          Width="100"
                          SelectionChanged="fontFamilyComboBox_SelectionChanged"
                          IsEditable="False"/>

                <!--TextBoxBase.TextChanged = Gatilho que é acionado quando o usuário escrever no campo editavel ou selecionar um elemento-->
                <ComboBox x:Name="fontSizeComboBox"
                          Width="50"
                          SelectionChanged="fontSizeComboBox_SelectionChanged"
                          IsEditable="False"
                          Focusable="False"
                    />


                <Button x:Name="saveButton"
                        Content="Salvar"
                        Click="saveButton_Click"
                        IsEnabled="False"/>

            </ToolBar>
        </ToolBarTray>

        <Grid>
            <RichTextBox x:Name="contentRichTextBox"
                         TextChanged="contentRichTextBox_TextChanged"
                         SelectionChanged="contentRichTextBox_SelectionChanged"
                         Focusable="True" 
                         />

        </Grid>
    </DockPanel>
</Window>
