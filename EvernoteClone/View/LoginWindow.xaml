<Window x:Class="EvernoteClone.View.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewmodel="clr-namespace:EvernoteClone.ViewModel"
        xmlns:local="clr-namespace:EvernoteClone.View"
        mc:Ignorable="d"
        Title="Login" Height="257" Width="250"
        WindowStartupLocation="CenterOwner"
        >

    <Window.Resources>
        <ResourceDictionary>
            <viewmodel:LoginViewModel x:Key="viewModel" />
            <Storyboard x:Key="BtnLogin_Moveup">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="28.8"/>
                    <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource BtnLogin_Moveup}"/>
        </EventTrigger>
    </Window.Triggers>

    <Grid DataContext="{StaticResource viewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="150*"/>
            <RowDefinition Height="91*"/>
        </Grid.RowDefinitions>
        <StackPanel Visibility="{Binding LoginVisibility}" Margin="10,10,10,10" Grid.RowSpan="2">

            <TextBlock Text="Nome:"/>
            <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Text="Senha:"/>
            <TextBox   
                Text="{Binding Password, 
                Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged}" 
                FontFamily="pack://application:,,,/Resources/#password">
                <TextBox.InputBindings>
                    <!--Disable CTRL+C (COPY) -->
                    <KeyBinding Command="ApplicationCommands.NotACommand"
                    Key="C"
                    Modifiers="Control" />
                    <!--Disable CTRL+X (CUT) -->
                    <KeyBinding Command="ApplicationCommands.NotACommand"
                    Key="X"
                    Modifiers="Control" />
                </TextBox.InputBindings>
                <TextBox.ContextMenu>
                    <!--Hide context menu where you could copy/cut as well -->
                    <ContextMenu Visibility="Collapsed" />
                </TextBox.ContextMenu>
            </TextBox>

            <Button x:Name="button" Command="{Binding LoginCommand}"
                    CommandParameter="{Binding User}"
                    Content="Login" 
                    Margin="0, 10" RenderTransformOrigin="0.5,0.5" >
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>

            <TextBlock Text="Registrar" Foreground="DodgerBlue">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding ShowRegisterCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBlock>
        </StackPanel>

        <StackPanel Visibility="{Binding RegisterVisibility}" Margin="10,10,10,10" Grid.RowSpan="2">

            <TextBlock Text="Nome:"/>
            <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Text="Sobrenome:"/>
            <TextBox Text="{Binding Lastname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Text="Senha:"/>
            <TextBox Text="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="pack://application:,,,/Resources/#password">
                <TextBox.InputBindings>
                    <!--Disable CTRL+C (COPY) -->
                    <KeyBinding Command="ApplicationCommands.NotACommand"
                    Key="C"
                    Modifiers="Control" />
                    <!--Disable CTRL+X (CUT) -->
                    <KeyBinding Command="ApplicationCommands.NotACommand"
                    Key="X"
                    Modifiers="Control" />
                </TextBox.InputBindings>
                <TextBox.ContextMenu>
                    <!--Hide context menu where you could copy/cut as well -->
                    <ContextMenu Visibility="Collapsed" />
                </TextBox.ContextMenu>
            </TextBox>

            <TextBlock Text="Confirme a Senha:"/>
            <TextBox Text="{Binding ConfirmPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="pack://application:,,,/Resources/#password">
                <TextBox.InputBindings>
                    <!--Disable CTRL+C (COPY) -->
                    <KeyBinding Command="ApplicationCommands.NotACommand"
                    Key="C"
                    Modifiers="Control" />
                    <!--Disable CTRL+X (CUT) -->
                    <KeyBinding Command="ApplicationCommands.NotACommand"
                    Key="X"
                    Modifiers="Control" />
                </TextBox.InputBindings>
                <TextBox.ContextMenu>
                    <!--Hide context menu where you could copy/cut as well -->
                    <ContextMenu Visibility="Collapsed" />
                </TextBox.ContextMenu>
            </TextBox>

            <Button Command="{Binding RegisterCommand}"
                    CommandParameter="{Binding User}"
                    Content="Registrar" 
                    Margin="0, 10"/>

            <TextBlock Text="Login" Foreground="DodgerBlue">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding ShowRegisterCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBlock>
        </StackPanel>
    </Grid>
</Window>
